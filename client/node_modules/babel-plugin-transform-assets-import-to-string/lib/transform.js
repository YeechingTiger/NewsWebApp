'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getHash(str) {
  return _crypto2.default.createHash('sha1').update(str, 'utf8').digest('hex').slice(0, 8);
}

function getFile(absPath, baseDir, uri) {
  var file = absPath.split(baseDir || _path2.default.sep).pop();

  if (!baseDir) {
    return uri ? '/' + file : file;
  }

  return _path2.default.join(baseDir, file).replace(/\\/g, '/').replace(/\/\/g/, '/');
}

var getVariableName = function getVariableName(p) {
  if (p.node.specifiers && p.node.specifiers[0] && p.node.specifiers[0].local) {
    return p.node.specifiers[0].local.name;
  }
};

exports.default = function (p, t, opts, absPath, calleeName) {
  var file = getFile(absPath, opts.baseDir, opts.baseUri);
  var hash = '';

  if (opts.hash === 1) {
    var content = _fs2.default.readFileSync(absPath, 'utf8').trim();
    hash = '?' + getHash(content);
  }

  var uri = '' + (opts.baseUri || '') + file + hash;

  if (calleeName === 'require') {
    p.replaceWith(t.StringLiteral(uri));
    return;
  }

  var variableName = getVariableName(p);
  if (variableName) {
    p.replaceWith(t.variableDeclaration('const', [t.variableDeclarator(t.identifier(variableName), t.stringLiteral(uri))]));
  }
};